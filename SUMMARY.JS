"use strict";

/*
 IN THE 12 SECTION , WE LEARNED ABOUT:
 1 -> HOW WE HAVE DIFFERENT FUNCTIONS TO REPRESENT NUMBERS IN JAVASCRIPT , LIKE PARSEINT , FLOAT , ISFINIT, ISINTEGER ETC.

 2 -> WE CREATED DATES , BY USING THE DATE CONSTRUCTOR FUNCTION , WE CHECKED SOME USEFUL METHODS OF DATES LIKE , GET MONTH OR YEAR ETC, ALSO IMPLEMENT THESE DATES INTO OUR BANKIST PROJECT

 3 -> WE ALSO EXPLORED THE BIGINT USECASE IN JAVASCRIPT , HOW WE CAN LOG OR USE AS MUCH AS BIG NUMBER IN OUR PROGRAM OR CODE. BY USING THE SYNTAX , BigInt , and n at last of number.

 4 -> WE ALSO DID OPERATIONS WITH DATES , LIKE CREATED A FUNCTION , IN WHICH WE DEFINE TWO PARAMS , WHICH CALCULATES THE DAY PASSED BETWEEN TWO GIVEN DATES , ALSO THE USECASE OF +(NUMBER) TO CONVERT DATE STRING TIME TIMESTAMP IN MILLISECONDS.

 5 -> WE ALSO EXPLORED THE INTERNATIONALIZATION OF DATES AND NUMBER , WHERE WE FORMATTED THE DATES ACCORDING TO THE GIVEN LOCALE . ALSO FOR NUMBERS , WE FORMATTED , ACCORDING TO THE GIVEN LOCAL OR COUNTRY.
  THE SYNTAX FOR INT DATES AND NUMBERS ARE :
                FOR NUMBER:
                new new Intl.NumberFormat("en-US").format(number);

                FOR DATES:
                new new Intl.DateTimeFormat("en-US").format(date);
    -> WE CAN ALSO PASS AN OPTION OBJECT TO IT. SEE IT IN THE LECTURE.

 4 -> AT THE END , WE EXPLORED THE TIMERS, WHERE SET TIME INTERVAL EXECUTES ONCE AFTER A GIVEN TIME , AND THE TIME INTERVAL , EXECUTES CONTINOUSLY AFTER GIVEN TIME , IT ALSO HAS CLEAR FUNCTIONS , THAT REMOVE OR DELETE THE FUNCTION.

 -> WE ALSO IMPLEMENTED THE TIMER TO OUR BANKST PROJECT , WHERE WHEN USER LOGGED IN , THE TIMER STARTS , AFTER END OF THE TIME , THE PAGE DISAPPERAS, BUT WHEN A USER DO SOMETHING IN PROJECT , IT WILL RESTART THE TIME AGAIN, ALSO FOR WHEN THE USER LOGIN.
*/
